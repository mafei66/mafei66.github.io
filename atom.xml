<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YiLou_tfy</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-17T03:20:13.451Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>崔先生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>判断质数+判断回文数</title>
    <link href="http://example.com/2021/02/17/%E5%88%A4%E6%96%AD%E8%B4%A8%E6%95%B0/"/>
    <id>http://example.com/2021/02/17/%E5%88%A4%E6%96%AD%E8%B4%A8%E6%95%B0/</id>
    <published>2021-02-16T16:00:00.000Z</published>
    <updated>2021-02-17T03:20:13.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题来源洛谷P1217"><a href="#问题来源洛谷P1217" class="headerlink" title="问题来源洛谷P1217"></a>问题来源洛谷P1217</h2><h3 id="判断质数"><a href="#判断质数" class="headerlink" title="判断质数"></a>判断质数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check2</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">       <span class="comment">//判断质数</span></span><br><span class="line">       <span class="keyword">if</span> (x==<span class="number">2</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=Math.sqrt(x);i++)&#123;</span><br><span class="line">           <span class="keyword">if</span> (x%i==<span class="number">0</span>)&#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="判断回文数"><a href="#判断回文数" class="headerlink" title="判断回文数"></a>判断回文数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check1</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断回文</span></span><br><span class="line">        <span class="keyword">int</span> a[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            a[flag]=x%<span class="number">10</span>;</span><br><span class="line">            x/=<span class="number">10</span>;</span><br><span class="line">            flag++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=flag/<span class="number">2</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i]!=a[flag-i])&#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题来源洛谷P1217&quot;&gt;&lt;a href=&quot;#问题来源洛谷P1217&quot; class=&quot;headerlink&quot; title=&quot;问题来源洛谷P1217&quot;&gt;&lt;/a&gt;问题来源洛谷P1217&lt;/h2&gt;&lt;h3 id=&quot;判断质数&quot;&gt;&lt;a href=&quot;#判断质数&quot; class=&quot;</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>java终止语句</title>
    <link href="http://example.com/2021/01/28/java%E7%BB%88%E6%AD%A2%E7%A8%8B%E5%BA%8F%E8%AF%AD%E5%8F%A5/"/>
    <id>http://example.com/2021/01/28/java%E7%BB%88%E6%AD%A2%E7%A8%8B%E5%BA%8F%E8%AF%AD%E5%8F%A5/</id>
    <published>2021-01-27T16:00:00.000Z</published>
    <updated>2021-01-28T06:23:47.123Z</updated>
    
    <content type="html"><![CDATA[<p>1，System.exit(int status)：不管status为何值都会退出程序（即结束当前正在运行的java虚拟机），但是只有在status等于0，即System.exit(0)；的时候整个程序正常退出。当status为除0之外的数字时都视为程序的不正常退出。（示例在一个if-else判断中，如果我们程序是按照我们预想的执行，到最后我们需要停止程序，那就使用System.exit(0)，而System.exit(1)一般放在catch块中，当捕获到异常，需要停止程序，我们使用System.exit(1)。）</p><p>2、return：return；是只能直接回到上一层继续往下执行，不会直接导致整个程序的停止执行。</p><p>3、break：break；只在switch语句体和循环体应用，一个break；语句能退出一个switch语句体或循环体，不会执行循环体或switch语句体余下的语句，不能连续退出多个switch语句体或循环体。</p><p>4、continue：自己目前只在循环体应用，continue；跳过本次循环体中余下尚未执行的语句，接着再一次进行循环的条件判定是否执行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1，System.exit(int status)：不管status为何值都会退出程序（即结束当前正在运行的java虚拟机），但是只有在status等于0，即System.exit(0)；的时候整个程序正常退出。当status为除0之外的数字时都视为程序的不正常退出。（示例</summary>
      
    
    
    
    <category term="java基础" scheme="http://example.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>约分问题</title>
    <link href="http://example.com/2021/01/28/%E7%BA%A6%E5%88%86%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/01/28/%E7%BA%A6%E5%88%86%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-27T16:00:00.000Z</published>
    <updated>2021-02-17T03:20:17.179Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题来源洛谷P1888"><a href="#问题来源洛谷P1888" class="headerlink" title="问题来源洛谷P1888"></a>问题来源洛谷P1888</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner sc =<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> a=sc.nextInt();</span><br><span class="line"><span class="keyword">int</span> b=sc.nextInt();</span><br><span class="line"><span class="keyword">int</span> num=a&lt;b?a:b;</span><br><span class="line"><span class="keyword">int</span> maxb=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = num; i &gt;=<span class="number">2</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (a%i==<span class="number">0</span>&amp;&amp;b%i==<span class="number">0</span>) &#123;</span><br><span class="line">maxb*=i;</span><br><span class="line">a=a/i;</span><br><span class="line">b=b/i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(a+<span class="string">&quot; &quot;</span>+b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题来源洛谷P1888&quot;&gt;&lt;a href=&quot;#问题来源洛谷P1888&quot; class=&quot;headerlink&quot; title=&quot;问题来源洛谷P1888&quot;&gt;&lt;/a&gt;问题来源洛谷P1888&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>精确问题1.0(BigDecimal)</title>
    <link href="http://example.com/2021/01/25/%E7%B2%BE%E7%A1%AE%E9%97%AE%E9%A2%981.0/"/>
    <id>http://example.com/2021/01/25/%E7%B2%BE%E7%A1%AE%E9%97%AE%E9%A2%981.0/</id>
    <published>2021-01-24T16:00:00.000Z</published>
    <updated>2021-01-28T04:13:26.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BigDecimal"><a href="#BigDecimal" class="headerlink" title="BigDecimal"></a>BigDecimal</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> a = <span class="number">0.00001234</span>;  </span><br><span class="line">BigDecimal b = <span class="keyword">new</span> BigDecimal(String.valueOf(a));  </span><br><span class="line">BigDecimal divisor = BigDecimal.ONE;  </span><br><span class="line">MathContext mc = <span class="keyword">new</span> MathContext(<span class="number">2</span>);  </span><br><span class="line">System.out.println(b.divide(divisor, mc));  </span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>public BigDecimal add (BigDecinal value) 加法运算</p><p>public BigDecimal subtract (BigDecimal value)减法运算</p><p>public BigDecimal multiply(BigDecimal value)乘法运算</p><p>public BigDecimal divide (BigDecimal value)除法运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BigDecimal biga = BigDecimal.valueOf(a);</span><br><span class="line">BigDecimal bigb = BigDecimal.valueOf(b);</span><br><span class="line">BigDecimal bigc = biga.add(bigb);</span><br><span class="line">System.out.println(bigc);<span class="comment">//0.3</span></span><br></pre></td></tr></table></figure><h2 id="BigDecimal转double"><a href="#BigDecimal转double" class="headerlink" title="BigDecimal转double"></a>BigDecimal转double</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> rs = bigc.doubleValue();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BigDecimal&quot;&gt;&lt;a href=&quot;#BigDecimal&quot; class=&quot;headerlink&quot; title=&quot;BigDecimal&quot;&gt;&lt;/a&gt;BigDecimal&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>java常用api总结</title>
    <link href="http://example.com/2020/11/13/java%E5%B8%B8%E7%94%A8api/"/>
    <id>http://example.com/2020/11/13/java%E5%B8%B8%E7%94%A8api/</id>
    <published>2020-11-12T16:00:00.000Z</published>
    <updated>2020-12-30T03:12:21.908Z</updated>
    
    <content type="html"><![CDATA[<h3 id="浮点数（精确小数点问题）"><a href="#浮点数（精确小数点问题）" class="headerlink" title="浮点数（精确小数点问题）"></a>浮点数（精确小数点问题）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="keyword">double</span> num = <span class="number">3.14159265358979323</span>;</span><br><span class="line">System.out.println(String.format(<span class="string">&quot;%.2f&quot;</span>, num));<span class="comment">//输出3.14</span></span><br><span class="line"><span class="number">2.</span></span><br><span class="line">System.out.printf(<span class="string">&quot;%.1f&quot;</span>,<span class="number">39.87</span>);<span class="comment">//输出39.9</span></span><br><span class="line"><span class="comment">//类似于C语言的输出格式 printf();</span></span><br></pre></td></tr></table></figure><h3 id="Number-amp-Math类-处理数学问题"><a href="#Number-amp-Math类-处理数学问题" class="headerlink" title="Number &amp; Math类(处理数学问题)"></a>Number &amp; Math类(处理数学问题)</h3><h4 id="abs-返回参数的绝对值"><a href="#abs-返回参数的绝对值" class="headerlink" title="abs() 返回参数的绝对值"></a>abs() 返回参数的绝对值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Integer a = -<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">double</span> d = -<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">float</span> f = -<span class="number">90</span>;    </span><br><span class="line">                        </span><br><span class="line">        System.out.println(Math.abs(a));</span><br><span class="line">        System.out.println(Math.abs(d));     </span><br><span class="line">        System.out.println(Math.abs(f));  </span><br><span class="line"><span class="comment">// 运行结果 8  100.0   90.0</span></span><br></pre></td></tr></table></figure><h4 id="compareTo-两个数比较大小"><a href="#compareTo-两个数比较大小" class="headerlink" title="compareTo() 两个数比较大小"></a>compareTo() 两个数比较大小</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> Integer x = <span class="number">5</span>;</span><br><span class="line">      System.out.println(x.compareTo(<span class="number">3</span>));</span><br><span class="line">      System.out.println(x.compareTo(<span class="number">5</span>));</span><br><span class="line">      System.out.println(x.compareTo(<span class="number">8</span>));    </span><br><span class="line"><span class="comment">// 运行结果 1 0 -1</span></span><br></pre></td></tr></table></figure><p>返回值<br>如果指定的数与参数相等返回0。</p><p>如果指定的数小于参数返回 -1。</p><p>如果指定的数大于参数返回 1。</p><h4 id="toSting-数字转字符串"><a href="#toSting-数字转字符串" class="headerlink" title="toSting() 数字转字符串"></a>toSting() 数字转字符串</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">int</span> x = <span class="number">5</span>;</span><br><span class="line">        System.out.println(x.toString());  </span><br><span class="line"><span class="comment">//运行结果 5 12</span></span><br></pre></td></tr></table></figure><h4 id="round-四舍五入"><a href="#round-四舍五入" class="headerlink" title="round() 四舍五入"></a>round() 四舍五入</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">double</span> d = <span class="number">100.675</span>;</span><br><span class="line">        <span class="keyword">double</span> e = <span class="number">100.500</span>;</span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">float</span> g = <span class="number">90f</span>;</span><br><span class="line"> </span><br><span class="line">        System.out.println(Math.round(d));</span><br><span class="line">        System.out.println(Math.round(e)); </span><br><span class="line">        System.out.println(Math.round(f)); </span><br><span class="line">        System.out.println(Math.round(g)); </span><br><span class="line"><span class="comment">// 运行结果 </span></span><br><span class="line"><span class="number">101</span></span><br><span class="line"><span class="number">101</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">90</span></span><br></pre></td></tr></table></figure><h3 id="Character类"><a href="#Character类" class="headerlink" title="Character类"></a>Character类</h3><h4 id="toUpperCase-字符转大写"><a href="#toUpperCase-字符转大写" class="headerlink" title="toUpperCase() 字符转大写"></a>toUpperCase() 字符转大写</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Character.toUpperCase(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line"><span class="comment">//运行结果 A</span></span><br></pre></td></tr></table></figure><h4 id="toLowerCase-字符转小写"><a href="#toLowerCase-字符转小写" class="headerlink" title="toLowerCase() 字符转小写"></a>toLowerCase() 字符转小写</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Character.toLowerCase(<span class="string">&#x27;A&#x27;</span>));</span><br><span class="line"><span class="comment">//运行结果 a</span></span><br></pre></td></tr></table></figure><h3 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h3><h4 id="charAt-int-index-返回指定索引处的char值"><a href="#charAt-int-index-返回指定索引处的char值" class="headerlink" title="charAt(int index) 返回指定索引处的char值"></a>charAt(int index) 返回指定索引处的char值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">&quot;yltfydkjhl&quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> result = s.charAt(<span class="number">6</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"><span class="comment">//运行结果 k</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="indexOf-对字符串进行查找"><a href="#indexOf-对字符串进行查找" class="headerlink" title="indexOf() 对字符串进行查找"></a>indexOf() 对字符串进行查找</h4><p> public int indexOf(int ch): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>public int indexOf(int ch, int fromIndex): 返回从 fromIndex 位置开始查找指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>int indexOf(String str): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><p>int indexOf(String str, int fromIndex): 返回从 fromIndex 位置开始查找指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//具体实例不做介绍</span></span><br></pre></td></tr></table></figure><h4 id="toCharArray-字符串转字符数组"><a href="#toCharArray-字符串转字符数组" class="headerlink" title="toCharArray() 字符串转字符数组"></a>toCharArray() 字符串转字符数组</h4><p>为了更好的操作字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        String Str = <span class="keyword">new</span> String(<span class="string">&quot;www.runoob.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;返回值 :&quot;</span> );</span><br><span class="line">        System.out.println( Str.toCharArray() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><p>Java中split主要用于分隔字符串，可以根据匹配给定的正则表达式来拆分字符串；语法格式“String.split(String regex, int limit)”，参数regex指定正则表达式分隔符，limit指定分割的份数。</p><h3 id="Arrays类-更好的操作数组"><a href="#Arrays类-更好的操作数组" class="headerlink" title="Arrays类 更好的操作数组"></a>Arrays类 更好的操作数组</h3><h4 id="Arrays-toString（）"><a href="#Arrays-toString（）" class="headerlink" title="Arrays.toString（）"></a>Arrays.toString（）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line"><span class="comment">//运行结果 [1,2,3,4]</span></span><br></pre></td></tr></table></figure><h3 id="sort大法-排序用他就对了"><a href="#sort大法-排序用他就对了" class="headerlink" title="sort大法(排序用他就对了)"></a>sort大法(排序用他就对了)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">36</span>,<span class="number">485</span>,<span class="number">5454</span>,<span class="number">121</span>&#125;;</span><br><span class="line">        Arrays.sort(arr);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"><span class="comment">//运行结果 [1, 36, 121, 485, 5454]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;浮点数（精确小数点问题）&quot;&gt;&lt;a href=&quot;#浮点数（精确小数点问题）&quot; class=&quot;headerlink&quot; title=&quot;浮点数（精确小数点问题）&quot;&gt;&lt;/a&gt;浮点数（精确小数点问题）&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;t</summary>
      
    
    
    
    <category term="java基础" scheme="http://example.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu使用教程</title>
    <link href="http://example.com/2020/11/11/ubnutu%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2020/11/11/ubnutu%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2020-11-10T16:00:00.000Z</published>
    <updated>2020-11-11T10:12:53.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">control+alt+t&#x2F;&#x2F;打开终端</span><br><span class="line">sudo su&#x2F;&#x2F;开启高级权限</span><br><span class="line">dpkg --list&#x2F;&#x2F;显示所有软件</span><br><span class="line">sudo apt-get --purge remove 包名 &#x2F;&#x2F;（--purge是可选项，写上这个属性是将软件及其配置文件一并删除</span><br></pre></td></tr></table></figure><p>##打包和压缩文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">bunzip2 file1.bz2 解压一个叫做 &#39;file1.bz2&#39;的文件</span><br><span class="line">bzip2 file1 压缩一个叫做 &#39;file1&#39; 的文件</span><br><span class="line">gunzip file1.gz 解压一个叫做 &#39;file1.gz&#39;的文件</span><br><span class="line">gzip file1 压缩一个叫做 &#39;file1&#39;的文件</span><br><span class="line">gzip -9 file1 最大程度压缩</span><br><span class="line">rar a file1.rar test_file 创建一个叫做 &#39;file1.rar&#39; 的包</span><br><span class="line">rar a file1.rar file1 file2 dir1 同时压缩 &#39;file1&#39;, &#39;file2&#39; 以及目录 &#39;dir1&#39;</span><br><span class="line">rar x file1.rar 解压rar包</span><br><span class="line">unrar x file1.rar 解压rar包</span><br><span class="line">tar -cvf archive.tar file1 创建一个非压缩的 tarball</span><br><span class="line">tar -cvf archive.tar file1 file2 dir1 创建一个包含了 &#39;file1&#39;, &#39;file2&#39; 以及 &#39;dir1&#39;的档案文件</span><br><span class="line">tar -tf archive.tar 显示一个包中的内容</span><br><span class="line">tar -xvf archive.tar 释放一个包</span><br><span class="line">tar -xvf archive.tar -C &#x2F;tmp 将压缩包释放到 &#x2F;tmp目录下</span><br><span class="line">tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包</span><br><span class="line">tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包</span><br><span class="line">tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包</span><br><span class="line">tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包</span><br><span class="line">zip file1.zip file1 创建一个zip格式的压缩包</span><br><span class="line">zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包</span><br><span class="line">unzip file1.zip 解压一个zip格式压缩包</span><br></pre></td></tr></table></figure><h2 id="apt工具"><a href="#apt工具" class="headerlink" title="apt工具"></a>apt工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get install package_name 安装&#x2F;更新一个 deb 包</span><br><span class="line">apt-cdrom install package_name 从光盘安装&#x2F;更新一个 deb 包</span><br><span class="line">apt-get update 升级列表中的软件包</span><br><span class="line">apt-get upgrade 升级所有已安装的软件</span><br><span class="line">apt-get remove package_name 从系统删除一个deb包</span><br><span class="line">apt-get check 确认依赖的软件仓库正确</span><br><span class="line">apt-get clean 从下载的软件包中清理缓存</span><br><span class="line">apt-cache search searched-package 返回包含所要搜索字符串的软件包名称</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    <category term="liunx" scheme="http://example.com/categories/liunx/"/>
    
    
  </entry>
  
  <entry>
    <title>小数点精确问题</title>
    <link href="http://example.com/2020/11/05/%E7%B2%BE%E7%A1%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2020/11/05/%E7%B2%BE%E7%A1%AE%E9%97%AE%E9%A2%98/</id>
    <published>2020-11-04T16:00:00.000Z</published>
    <updated>2021-01-28T04:13:17.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="洛谷p5719"><a href="#洛谷p5719" class="headerlink" title="洛谷p5719"></a>洛谷p5719</h2><p>题目描述<br>给定 n(n≤10000)n(n≤10000) 和 k(k≤ 100)k(k≤100)，将从 1 到 nn 之间的所有正整数可以分为两类：A 类数可以被 k整除（也就是说是 k 的倍数），而 B 类数不能。请输出这两类数的平均数，精确到小数点后 1 位，用空格隔开。</p><p>数据保证两类数的个数都不会是 0。</p><p>输入格式<br>无</p><p>输出格式<br>无</p><p>输入输出样例<br>输入 #1复制<br>100 16<br>输出 #1复制<br>56.0 50.1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">p5719</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">double</span> n=sc.nextDouble();</span><br><span class="line">        <span class="keyword">double</span> k=sc.nextDouble();</span><br><span class="line">        <span class="keyword">double</span> m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i%k==<span class="number">0</span>)&#123;</span><br><span class="line">                sum+=i;</span><br><span class="line">                m+=<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                num+=i;</span><br><span class="line">                j+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> a=sum/m;</span><br><span class="line">        <span class="keyword">double</span> b=num/j;</span><br><span class="line">        <span class="comment">/*String sr1=String.format(&quot;%.1f&quot;,a);</span></span><br><span class="line"><span class="comment">        String sr2=String.format(&quot;%.1f&quot;,b);</span></span><br><span class="line"><span class="comment">        System.out.println(sr1+&quot; &quot;+sr2);*/</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%.1f&quot;</span>,sum/m);</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.1f&quot;</span>,num/j);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;洛谷p5719&quot;&gt;&lt;a href=&quot;#洛谷p5719&quot; class=&quot;headerlink&quot; title=&quot;洛谷p5719&quot;&gt;&lt;/a&gt;洛谷p571</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>全排列问题（dfs）</title>
    <link href="http://example.com/2020/11/01/%E5%85%A8%E6%8E%92%E5%88%97%E9%97%AE%E9%A2%98%EF%BC%88dfs%EF%BC%89/"/>
    <id>http://example.com/2020/11/01/%E5%85%A8%E6%8E%92%E5%88%97%E9%97%AE%E9%A2%98%EF%BC%88dfs%EF%BC%89/</id>
    <published>2020-10-31T16:00:00.000Z</published>
    <updated>2020-11-01T09:30:03.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>2020年4月蓝桥杯第二次模拟赛（本科组）Java<br>【问题描述】<br>将LANQIAO中的字母重新排列，可以得到不同的单词，如LANQIAO、AAILNOQ等，注意这7个字母都要被用上，单词不一定有具体的英文意义。<br>请问，总共能排列如多少个不同的单词。<br>【答案提交】<br>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lq03test</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[]p=<span class="string">&quot;abc&quot;</span>.toCharArray();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Set&lt;String&gt;pb=<span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[]d=<span class="keyword">new</span> <span class="keyword">char</span>[p.length];</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span>[] res=<span class="keyword">new</span> <span class="keyword">boolean</span>[p.length];<span class="comment">//布尔数组初始值false</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        dfs(<span class="number">0</span>);</span><br><span class="line">        System.out.println(pb);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//截止条件</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (k==p.length)&#123;</span><br><span class="line">          pb.add(<span class="keyword">new</span> String(d));</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//遍历候选节点，筛选能否被使用  </span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p.length;i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(res[i]==<span class="keyword">false</span>)&#123;<span class="comment">//没被使用过</span></span><br><span class="line">              d[k]=p[i];</span><br><span class="line">              res[i]=<span class="keyword">true</span>;<span class="comment">//被使用过了</span></span><br><span class="line">              dfs(k+<span class="number">1</span>);</span><br><span class="line">              res[i]=<span class="keyword">false</span>;<span class="comment">//同一for循环同级需要恢复</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;2020年4月蓝桥杯第二次模拟赛（本科组）Java&lt;br&gt;【问题描述】&lt;br&gt;将LANQIAO中的字母重新排列，可以得到不同</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>本地搭建OJ</title>
    <link href="http://example.com/2020/10/25/oj%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2020/10/25/oj%E6%90%AD%E5%BB%BA/</id>
    <published>2020-10-24T16:00:00.000Z</published>
    <updated>2020-10-25T05:39:34.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>事情是这样的，某个不当人的让我弄个OJ，然后我可能是有点呆，挺简单的事弄了一周了。但是我还是想说一句，你有教程为啥不早点给我看看？我xxxxxxxx你xxxxxxx的！！！xxxxxx<br>然后这是从头弄得，前面可能都没啥用。往后再看看吧。</p><h2 id="1-下载vm虚拟机"><a href="#1-下载vm虚拟机" class="headerlink" title="1.下载vm虚拟机"></a>1.下载vm虚拟机</h2><p>vm虚拟机是网上下的，记得找好密匙，不然是要付费的。<br>不做介绍了就。具体请看链接➡<a href="https://lmbtfy.cn/">需要我帮你百度吗？</a></p><h2 id="2-下载ubuntu系统镜像"><a href="#2-下载ubuntu系统镜像" class="headerlink" title="2.下载ubuntu系统镜像"></a>2.下载ubuntu系统镜像</h2><p><a href="https://ubuntu.com/download/desktop">ubuntu官网</a><br>现在更新到20.10版本，但是我建议你找找18.04版本的。最新版本是更新了很多东西，很爽。但是吧，当出现bug的时候你会更爽，百度不到教程的痛铭记于心！！！<br><a href="http://releases.ubuntu.com/18.04/">18.04下载链接</a><br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025113945.png"></p><h2 id="3-在vm安装ubnutu"><a href="#3-在vm安装ubnutu" class="headerlink" title="3.在vm安装ubnutu"></a>3.在vm安装ubnutu</h2><p>1.创建虚拟机<br>版本不同，界面可能会有不同，但大体一样。<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025114515.png"><br>2.疯狂下一步直到出现这<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025132845.png"><br>3.选择liunx注意下拉要选择对应的ububtu版本 （64位还是32位）不然会拉闸的</p><p><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025132900.png"><br>4.安装位置建议新建个干净的文件夹<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133350.png"></p><p>5.大部分默认就行，如果看到界面不一样，那就下一步，到这里选择将虚拟机存储为单个磁盘</p><p><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133417.png"><br>6.下一步（我不想再说下一步了）</p><p><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133444.png"><br>7.选择镜像<br><img src="https://img-blog.csdn.net/20160116171003313"><br>8.完成就行了</p><p>9.开启虚拟机（黑屏不要慌他就是很慢）<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133556.png"><br>到这里选择语言，然后点右面的<br>剩下的不想说了，如图<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133623.png"><br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133642.png"><br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133701.png"><br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133717.png"></p><p>然后设置用户名和密码</p><p>10.开始安装了<br>这里建议断网，可能会些文件没更新，等安装好了自己手动更新就好了，不然这个安装界面得等个一两年</p><p>11.安好了会提示你重启，重启就好了<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025133925.png"><br>安好了可以先看看有没有网啥的</p><h2 id="4-换源（不换也行，反正就是慢）"><a href="#4-换源（不换也行，反正就是慢）" class="headerlink" title="4.换源（不换也行，反正就是慢）"></a>4.换源（不换也行，反正就是慢）</h2><h3 id="1-备份"><a href="#1-备份" class="headerlink" title="1.备份"></a>1.备份</h3><p>万事先备份是个好习惯，没删过库的程序员那叫程序员吗–出自不当人的苗学长</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.首先备份源列表</span><br><span class="line">sudo cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list_backup</span><br></pre></td></tr></table></figure><h3 id="2-修改source-list文件"><a href="#2-修改source-list文件" class="headerlink" title="2.修改source.list文件"></a>2.修改source.list文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2. 打开sources.list文件</span><br><span class="line">sudo gedit &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><p>编辑/etc/apt/sources.list文件, 在文件最前面添加阿里云镜像源（注意是文件最前面！！！）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#  阿里源</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h3 id="刷新列表"><a href="#刷新列表" class="headerlink" title="刷新列表"></a>刷新列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure><h3 id="其他源（反正那个快用哪个呗）"><a href="#其他源（反正那个快用哪个呗）" class="headerlink" title="其他源（反正那个快用哪个呗）"></a>其他源（反正那个快用哪个呗）</h3><p>中科大源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#  中科大源</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>163源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 163源</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>清华源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 清华源</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><h2 id="正式开始安装"><a href="#正式开始安装" class="headerlink" title="正式开始安装"></a>正式开始安装</h2><p>bibi一堆没啥用的我也很无奈，因为要凑字吗/狗头<br>开源项目地址:<a href="https://github.com/zhblue/hustoj">https://github.com/zhblue/hustoj</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/20201025122927.png"><br>对 你没看错，就两行，要一行一行运行的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;gitee.com&#x2F;zhblue&#x2F;hustoj&#x2F;raw&#x2F;master&#x2F;trunk&#x2F;install&#x2F;install-ubuntu18-gitee.sh</span><br><span class="line">sudo bash install-ubuntu18-gitee.sh</span><br></pre></td></tr></table></figure><p>安好了浏览器进入127.0.0.1就进去了<br>以admin作为用户名注册一个用户自动成为管理员<br>到这就完事了，就完事了<br>！！！<br>对就是这么简单<br>更多方法在<br><a href="https://www.bilibili.com/video/BV1Mp4y1C7Xx?from=search&seid=3161101412311301394">hust哔哩哔哩安装教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;事情是这样的，某个不当人的让我弄个OJ，然后我可能是有点呆，挺简单的事弄了一周了。但是我还是想说一句，你有教程为啥不早点给我看看？我xxxx</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo+github搭建博客</title>
    <link href="http://example.com/2020/10/15/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2020/10/15/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-10-14T16:00:00.000Z</published>
    <updated>2020-10-15T17:12:06.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h2><h3 id="1-下载node-js"><a href="#1-下载node-js" class="headerlink" title="1.下载node js"></a>1.下载node js</h3><p>下载地址：<br><a href="http://nodejs.cn/download/">node下载地址</a><br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/1.png"><br>勾选add to path</p><h3 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h3><p><a href="https://git-scm.com/">git下载地址</a></p><p><a href="https://www.lanzous.com/i9s7tib">网盘下载地址</a></p><p>疯狂next就行<br>检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>如图即为正确<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/2.png"></p><h3 id="3-安装cnpm"><a href="#3-安装cnpm" class="headerlink" title="3.安装cnpm"></a>3.安装cnpm</h3><p>右键任意位置选择git bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/3.png"></p><h2 id="2-安装hexo并初始化"><a href="#2-安装hexo并初始化" class="headerlink" title="2.安装hexo并初始化"></a>2.安装hexo并初始化</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>新建个文件夹 git bash<br>此处建议连接手机热点食用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>出现Install dependencies后<br>ctrl+c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure><p>之后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>会出现网址复制后打开<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/4.png"><br><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-33-55.tyszma65r9.png"><br>是不是感觉不是很好看<br>这里是个皮肤链接<br>但是现在已然半夜12.29了 以后在更新吧<br><a href="https://hexo.io/themes/#%E4%B8%AD%E6%96%87">皮肤链接</a></p><h2 id="github部署"><a href="#github部署" class="headerlink" title="github部署"></a>github部署</h2><p>就是能在网上看到你的网站了！！！<br>注册账号就自己百度哈</p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/5.png"><br>正常应该是个create reposito的，但是我已经有仓库了 所以我是new反正左上角绿色就对了<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/6.jpg"><br>仓库名必须是用户名 + .github.io</p><h3 id="获得密匙"><a href="#获得密匙" class="headerlink" title="获得密匙"></a>获得密匙</h3><p>打开git bash </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “填自己的邮箱“</span><br></pre></td></tr></table></figure><p>之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure><p>把输出出来的东西复制下来</p><p>点击github上的头像选择ssh<br><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-53-12.bnffwtcf66a.png"></p><p>粘贴刚才复制那一堆玩意<br><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-55-05.lakxr64606k.png"><br>点击下面绿色的<br>然后打开git bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>可能会出现这玩意，输入yes就行（反正我没出现这玩意）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?</span><br></pre></td></tr></table></figure><p>返回github打开你的库然后如图复制下来地址<br> <img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/8.png"><br> 打开配置信息（配置信息在你在初始化的时候创建内个文件夹里默认名称是_config.yml）用个编辑器打开就行记事本也行这里我用的是vscode</p><p> 修改deploy信息<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你复制的地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/9.png"><br>在博客根目录打开git bash（根目录就是你创建的文件夹）<br>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;你的名字（好像随便我用的是git的名字）&quot;</span><br><span class="line">$ git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>安装上传插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><p>在根目录打开git bash执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>返回git打开项目点击set下滑找到如图的地方<br><img src="https://cdn.jsdelivr.net/gh/mafei66/YiLoutfy/img/10.png"><br>搞定 完事</p><h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p>到这里就算完事了<br>后期更新怎么往博客上传文章，建议先了解下markdown文本的正确书写方式  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-准备&quot;&gt;&lt;a href=&quot;#1-准备&quot; class=&quot;headerlink&quot; title=&quot;1.准备&quot;&gt;&lt;/a&gt;1.准备&lt;/h2&gt;&lt;h3 id=&quot;1-下载node-js&quot;&gt;&lt;a href=&quot;#1-下载node-js&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
</feed>
